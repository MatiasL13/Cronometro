
import java.awt.event.ActionEvent;
import java.awt.event.FocusEvent;
import java.awt.event.MouseEvent;

/**
 *
 * @modificado por ziero, autor original author Viruz
 */

public class Cronometro extends javax.swing.JFrame {
    CronometroThread cronometro;
    Object source;
    private int diferenciaX;
       private int diferenciaY;
    /**
     * Creates new form Cronometro
     */
    public Cronometro() {
        initComponents();
        cronometro = new CronometroThread(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unccked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        display = new javax.swing.JLabel();
        dragonText = new javax.swing.JLabel();
        dragonBotton = new javax.swing.JButton();
        baronText = new javax.swing.JLabel();
        BaronBotton = new javax.swing.JButton();
        jToolBar1 = new javax.swing.JToolBar();
        start = new javax.swing.JButton();
        masBotton = new javax.swing.JButton();
        menosBotton = new javax.swing.JButton();
        stop = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("Bundle"); // NOI18N
        setTitle(bundle.getString("Cronometro.title")); // NOI18N
        setAlwaysOnTop(true);
        setBackground(new java.awt.Color(51, 255, 0));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setExtendedState(1);
        setFocusTraversalPolicyProvider(true);
        setFocusable(false);
        setLocationByPlatform(true);
        setModalExclusionType(java.awt.Dialog.ModalExclusionType.TOOLKIT_EXCLUDE);
        setUndecorated(true);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
        });
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
                formWindowLostFocus(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowDeactivated(java.awt.event.WindowEvent evt) {
                formWindowDeactivated(evt);
            }
            public void windowIconified(java.awt.event.WindowEvent evt) {
                formWindowIconified(evt);
            }
        });
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });
        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                formFocusLost(evt);
            }
        });
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        display.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        display.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        display.setText(bundle.getString("Cronometro.display.text")); // NOI18N

        dragonText.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        dragonText.setForeground(new java.awt.Color(204, 0, 0));
        dragonText.setText(bundle.getString("Cronometro.dragonText.text")); // NOI18N

        dragonBotton.setFont(new java.awt.Font("Times New Roman", 0, 15)); // NOI18N
        dragonBotton.setMnemonic('x');
        dragonBotton.setText(bundle.getString("Cronometro.dragonBotton.text")); // NOI18N
        dragonBotton.setFocusable(false);
        dragonBotton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        dragonBotton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        dragonBotton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dragonBottonActionPerformed(evt);
            }
        });

        baronText.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        baronText.setForeground(new java.awt.Color(102, 0, 102));
        baronText.setText(bundle.getString("Cronometro.baronText.text")); // NOI18N
        baronText.setPreferredSize(new java.awt.Dimension(34, 90));
        baronText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                baronTextFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                baronTextFocusLost(evt);
            }
        });

        BaronBotton.setFont(new java.awt.Font("Times New Roman", 0, 15)); // NOI18N
        BaronBotton.setMnemonic('z');
        BaronBotton.setText(bundle.getString("Cronometro.BaronBotton.text")); // NOI18N
        BaronBotton.setDoubleBuffered(true);
        BaronBotton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BaronBotton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BaronBotton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BaronBottonActionPerformed(evt);
            }
        });
        BaronBotton.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                BaronBottonFocusGained(evt);
            }
        });

        jToolBar1.setFloatable(false);
        jToolBar1.setBorderPainted(false);

        start.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        start.setText(bundle.getString("Cronometro.start.text")); // NOI18N
        start.setFocusable(false);
        start.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        start.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        start.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startActionPerformed(evt);
            }
        });
        jToolBar1.add(start);

        masBotton.setFont(new java.awt.Font("Tahoma", 0, 9)); // NOI18N
        masBotton.setText(bundle.getString("Cronometro.masBotton.text")); // NOI18N
        masBotton.setFocusable(false);
        masBotton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        masBotton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        masBotton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                masBottonActionPerformed(evt);
            }
        });
        jToolBar1.add(masBotton);

        menosBotton.setFont(new java.awt.Font("Tahoma", 0, 9)); // NOI18N
        menosBotton.setText(bundle.getString("Cronometro.menosBotton.text")); // NOI18N
        menosBotton.setFocusable(false);
        menosBotton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        menosBotton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        menosBotton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menosBottonActionPerformed(evt);
            }
        });
        jToolBar1.add(menosBotton);

        stop.setText(bundle.getString("Cronometro.stop.text")); // NOI18N
        stop.setEnabled(false);
        stop.setFocusable(false);
        stop.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        stop.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        stop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopActionPerformed(evt);
            }
        });
        jToolBar1.add(stop);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(display, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BaronBotton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(baronText, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dragonBotton, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dragonText, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(display)
            .addComponent(baronText, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(BaronBotton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addComponent(dragonText)
                .addComponent(dragonBotton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        getAccessibleContext().setAccessibleDescription(bundle.getString("Cronometro.AccessibleContext.accessibleDescription")); // NOI18N

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void stopActionPerformed(ActionEvent evt) {//GEN-FIRST:event_stopActionPerformed
        start.setEnabled(true);
        stop.setEnabled(false);
        // pause.setEnabled(false);
        cronometro.setLive(false);
        cronometro.setGo(false);
        cronometro.setSegundos(0);
    }//GEN-LAST:event_stopActionPerformed

    private void startActionPerformed(ActionEvent evt) {//GEN-FIRST:event_startActionPerformed
        source = evt.getSource();
        if(source == start){
            cronometro.createThread();
            cronometro.setLive(true);
            cronometro.setGo(true);
            start.setEnabled(false);
            //  pause.setEnabled(true);
            stop.setEnabled(true);
        }
    }//GEN-LAST:event_startActionPerformed

    private void dragonBottonActionPerformed(ActionEvent evt) {//GEN-FIRST:event_dragonBottonActionPerformed
        cronometro.setBandera(2); // TODO add your handling code here:
    }//GEN-LAST:event_dragonBottonActionPerformed

    private void baronTextFocusLost(FocusEvent evt) {//GEN-FIRST:event_baronTextFocusLost
        //            cronometro.setBandera(2);
        // TODO add your handling code here:
    }//GEN-LAST:event_baronTextFocusLost

    private void baronTextFocusGained(FocusEvent evt) {//GEN-FIRST:event_baronTextFocusGained
        //cronometro.setBandera(2);        // TODO add your handling code here:
    }//GEN-LAST:event_baronTextFocusGained

    private void masBottonActionPerformed(ActionEvent evt) {//GEN-FIRST:event_masBottonActionPerformed
cronometro.setBandera2(1);        // TODO add your handling code here:
    }//GEN-LAST:event_masBottonActionPerformed

    private void menosBottonActionPerformed(ActionEvent evt) {//GEN-FIRST:event_menosBottonActionPerformed
        cronometro.setBandera2(2);  // TODO add your handling code here:
    }//GEN-LAST:event_menosBottonActionPerformed

    private void BaronBottonFocusGained(FocusEvent evt) {//GEN-FIRST:event_BaronBottonFocusGained
        // cronometro.setBandera(2);   // TODO add your handling code here:
    }//GEN-LAST:event_BaronBottonFocusGained

    private void BaronBottonActionPerformed(ActionEvent evt) {//GEN-FIRST:event_BaronBottonActionPerformed
        cronometro.setBandera(1);

        // baronText.getBaron().setText(""+hr+" : "+min+6+" : "+seg);      // TODO add your handling code here:
    }//GEN-LAST:event_BaronBottonActionPerformed

    private void formMousePressed(MouseEvent evt) {//GEN-FIRST:event_formMousePressed

        diferenciaX = evt.getXOnScreen() - this.getLocationOnScreen().x;
diferenciaY = evt.getYOnScreen() - this.getLocationOnScreen().y; // TODO add your handling code here:
    }//GEN-LAST:event_formMousePressed

    private void formMouseDragged(MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
      this.setLocation(evt.getXOnScreen() - diferenciaX, evt.getYOnScreen() - diferenciaY);  // TODO add your handling code here:
    }//GEN-LAST:event_formMouseDragged

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_formKeyPressed

    private void formWindowDeactivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowDeactivated
dragonBotton.setMnemonic('x');        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowDeactivated

    private void formWindowIconified(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowIconified
dragonBotton.setMnemonic('x');        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowIconified

    private void formWindowLostFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowLostFocus
dragonBotton.setMnemonic('x');        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowLostFocus

    private void formFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusLost
dragonBotton.setMnemonic('x');        // TODO add your handling code here:
    }//GEN-LAST:event_formFocusLost

    public int a;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BaronBotton;
    private javax.swing.JLabel baronText;
    private javax.swing.JLabel display;
    private javax.swing.JButton dragonBotton;
    private javax.swing.JLabel dragonText;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JButton masBotton;
    private javax.swing.JButton menosBotton;
    private javax.swing.JButton start;
    private javax.swing.JButton stop;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the display
     */
    public javax.swing.JLabel getDisplay() {
        return display;
    }
      public javax.swing.JLabel getBaron() {
        return baronText;
    }
      public javax.swing.JLabel getDragon() {
        return dragonText;
    }

    /**
     * @param display the display to set
     */
    public void setDisplay(javax.swing.JLabel display) {
        this.display = display;
    }
}